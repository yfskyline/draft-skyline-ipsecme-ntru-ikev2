<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.2 (Ruby 3.0.2) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-skyline-ipsecme-ntru-ikev2-latest" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.18.2 -->
  <front>
    <title abbrev="NTRU IKEv2">Post-quantum Hybrid Key Exchange with NTRU in the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
    <seriesInfo name="Internet-Draft" value="draft-skyline-ipsecme-ntru-ikev2-latest"/>
    <author fullname="Yuta Fukagawa">
      <organization>NTT Com</organization>
      <address>
        <email>y.fukagawa@ntt.com</email>
      </address>
    </author>
	<author fullname="Hisaharu Kosuge">
      <organization>NTT</organization>
      <address>
        <email>hrhs@ntt.com</email>
      </address>
    </author>
	<author fullname="Masataka Saito">
      <organization>NTT Data Intellilink</organization>
      <address>
        <email>saitomst@intellilink.co.jp</email>
      </address>
    </author>

    <author fullname="Scott Fluhrer">
      <organization>Cisco Systems</organization>
      <address>
        <email>sfluhrer@cisco.com</email>
      </address>
    </author>

	<author fullname="Akira Nagai">
      <organization>NTT</organization>
      <address>
        <email>akira.nagai@ntt.com</email>
      </address>
    </author>


	
    <date/>
    <area>Security</area>
    <workgroup>IPSECME</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t> 
	  This document specifies the use of NTRU in the Internet Key Exchange Protocol Version 2 (IKEv2), following the framework defined in RFC 9370.
      RFC 9370 introduces a mechanism that enables multiple key encapsulation mechanisms (KEMs) to be used within IKEv2, allowing up to seven additional key exchange methods to be negotiated alongside the initial key exchange.
      This document defines how NTRU can be used as an additional key exchange method to improve the post-quantum security of IKEv2 by broadening algorithmic diversity.
	  </t>
	  
	  <t> 
	  [EDNOTE: IANA KE code points for NTRU will be needed to be assigned. ] 
	  </t>
	  
    </abstract>
  </front>
  <middle>

<section anchor="introduction">
    <name>Introduction</name>
	<t>The IKEv2 as specified in <xref target="RFC7296"/>, uses the Diffie-Hellman (DH) or the Elliptic Curve Diffie-Hellman (ECDH) algorithm to establish a shared secret between an initiator and a responder. However, the advent of a Cryptographically Relevant Quantum Computer (CRQC) defined in <xref target="I-D.D25"/> would pose a significant threat to the security of DH and ECDH.
	To address this problem, the Mixing Preshared Keys in IKEv2 specification <xref target="RFC8784"/> was introduced as a temporary option. After that, PQ/T Hybrid Key Encapsulation Mechanism (KEM) in IKEv2 was specified, which combines post-quantum and classical KEMs to ensure security against both classical and quantum adversaries. 
    To enable PQ/T Hybrid KEMs in IKEv2, <xref target="RFC9370"/> extends the IKEv2 specification to allow multiple key exchanges to take place during the computation of a shared secret in the Security Association (SA) setup.
	</t>
	
	<t>
	The Multiple Key Exchanges defined in <xref target="RFC9370"/> specifies how to perform up to seven additional key exchanges using the IKE_INTERMEDIATE or IKE_FOLLOWUP_KE messages, along with procedures for deriving new SKEYSEED and KEYMAT key materials.The reason RFC 9370 allows the use of multiple post-quantum KEMs is to hedge against the risk that any single KEM may be broken in the future.
	
	While RFC 9370 provides a general framework that enables hybrid KEMs, it does not define specific instantiations for concrete combinations of multiple KEMs. Currently, two Internet-Drafts aim to define such additional key exchange methods by building upon the framework established in <xref target="RFC9370"/>.
    First, <xref target="I-D.KR24"></xref> adds ML-KEM <xref target="FIPS203"></xref>, also known as Kyber. Second, <xref target="I-D.W25"></xref> introduces FrodoKEM for reasons of algorithm diversity and cryptographic agility.
	</t>
	
	<t>
	To improve the diversity of post-quantum KEM algorithms, this document proposes to include NTRU <xref target="I-D.F25"/>-specifically, the version of NIST Post-Quantum Cryptography (PQC) round 3 <xref target="NTRU"/> as one of the algorithms usable within the framework defined in <xref target="RFC9370"/>.
	The inclusion of NTRU increases algorithmic diversity for two main reasons. First, although NTRU is lattice-based, its security is based on the NTRU problem and does not rely on the (Module) Learning With Errors ((M)LWE) problems. Second, it provides a tighter security proof for the desired security notion: indistinguishability under adaptive chosen-ciphertext attacks (IND-CCA2).
	In addition to increasing algorithmic versatility, the absence of patents is beneficial to users. NTRU is patent-free, which has the advantage of allowing users to avoid patent issues.
    NTRU is also a valuable choice from an implementation perspective, as its overall performance is comparable to that of ML-KEM, with notably faster encapsulation. 
	</t>
      <section anchor="kems">
        <name>KEMs</name>
        <t>In the context of the NIST Post-Quantum Cryptography Standardization Project <xref target="NIST-PQ"/>, key exchange algorithms are formulated as KEMs, which consist of three steps:</t>
        <ul spacing="normal">
          <li>
            <t>'KeyGen() -&gt; (pk, sk)': A probabilistic key generation algorithm, which generates a public / encapsulation key 'pk' and a private / decapsulation key 'sk'. The resulting pk is sent to the responder in the KEi payload.</t>
          </li>
          <li>
            <t>'Encaps(pk) -&gt; (ct, ss)': A probabilistic encapsulation algorithm, which takes as input a public key 'pk' (from the KEi) and outputs a ciphertext 'ct' and shared secret 'ss'. The 'ct' is sent back to intiator in the KEr payload.</t>
          </li>
          <li>
            <t>'Decaps(sk, ct) -&gt; ss': A decapsulation algorithm, which takes as input a secret key 'sk' and ciphertext 'ct' (from the KEr) and outputs a shared secret 'ss', or in some rare cases a distinguished error value.</t>
          </li>
        </ul>
      </section>
      <section anchor="ntru">
        <name>NTRU</name>
        <t>NTRU <xref target="I-D.F25"/> is a KEM based on lattices over polynomial rings.
		It offers good performance, as well as small and balanced key and ciphertext sizes.
		The parameters of NTRU were chosen based on the three security levels defined in the NIST PQC Project: Levels 1, 3, and 5.
		These levels correspond to the hardness of breaking AES-128, AES-192 and AES-256.
		Also, NTRU defines two families of parameters: NTRU-HPS and NTRU-HRSS. 
		The NTRU-HPS consists of three parameter sets: ntruhps2048677, ntruhps4096821, and ntruhps40961229, corresponding to security levels 1, 3, and 5, respectively.
		The NTRU-HRSS includes two parameter sets: ntruhrss701 and ntruhrss1373, corresponding to security levels 1 and 5, respectively.</t>

        <t>
		This specification introduces five parameters for IKEv2 key exchanges to allow flexible selection based on security levels and implementation requirements, such as performance, bandwidth, and packet size constraints.
        Since the ntruhps40961229 and ntruhrss1373 public key and ciphertext sizes can exceed the typical network MTU, these key exchanges could require two or three network IP packets from both the initiator and the responder.
		 </t>
      </section>
      <section anchor="conventions-and-definitions">
        <name>Conventions and Definitions</name>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      </section>
</section>
    
    <section anchor="ntru-in-ikev2">
      <name>NTRU in IKEv2</name>
      <section anchor="ntru-in-ikeintermediate-messages">
        <name>NTRU in IKE_INTERMEDIATE or CREATE_CHILD_SA messages</name>
        <t>NTRU key exchanges can be negotiated in IKE_INTERMEDIATE or IKE_FOLLOWUP_KE messages as defined in the Multiple Key Exchanges in IKEv2 specification <xref target="RFC9370"/>. We summarize them here for completeness. </t> 
		<t>Section 2.2.2 of <xref target="RFC9370"/> specifies that KEi(0), KEr(0) are regular key exchange messages in the first IKE_SA_INIT exchange which end up generating a set of keying material, SK_d, SK_a[i/r], and SK_e[i/r]. The peers then perform an IKE_INTERMEDIATE exchange, carrying new Key Exchange payloads. These are protected with the SK_e[i/r] and SK_a[i/r] keys which were derived from the IKE_SA_INIT as per Section 3.3.1 of the Intermediate Exchange in IKEv2 document <xref target="RFC9242"/>. The initiator generates an NTRU keypair (sk, pk) using KeyGen(), and sends the public key (pk) to the responder inside a KEi(1) payload. The responder will encapsulate a shared secret ss using Encaps(pk), and the resulting ciphertext (ct) is sent to initiator using the KEr(1). After the initiator receives KEr(1), it will decapsulate it using Decaps(sk, ct). Both Encaps and Decaps return the shared secret (ss), and both peers have a common shared secret SK(1) at the end of this KE(1) exchange.
			The NTRU shared secret is stirred into new keying material SK_d, SK_a[i/r], and SK_e[i/r] as defined in Section 2.2.2 of the Multiple Key Exchanges in IKEv2 document <xref target="RFC9370"/>. Afterwards the peers continue to the IKE_AUTH exchange phase as defined in Section 3.3.2 of the Intermediate Exchange in IKEv2 specification <xref target="RFC9242"/>.</t>
		<t>NTRU can also be used to create or rekey a Child SA or rekey the IKE SA by using an IKE_FOLLOWUP_KE message after a CREATE_CHILD_SA message. After the NTRU additional key exchange KE(1) has taken place using and IKE_FOLLOWUP_KE exchange, the IKE or Child SA are rekeyed by stirring the new NTRU shared secret SK(1) in SKEYSEED and KEYMAT as specified in Section 2.2.4 of <xref target="RFC9370"/>.</t>
		
		<t>The ntruhps4096821, ntruhps40961229, and ntruhrss1373 public keys and ciphertexts may make UDP packet sizes larger typical network MTUs (1500 bytes). Thus, IKE_INTERMEDIATE or IKE_FOLLOWUP_KE messages carrying NTRU public keys and ciphertexts may be IKEv2 fragmented as per the IKEv2 Message Fragmentation specification <xref target="RFC7383"/>. </t>
		
		<t>As the payload lengths of ntruhps2048677, ntruhrss701, and ntruhps4096821 are less than the typical network MTUs (1500 bytes), these parameters <bcp14>MAY</bcp14> be used in IKE_SA_INIT, resulting in a configuration where only post-quantum KEMs are used. 
		
		The other parameters, ntruhps40961229 and ntruhrss1373 <bcp14>SHOULD NOT</bcp14> be used in IKE_SA_INIT messages that could exceed typical network MTUs and cannot be fragmented using IKEv2 fragmentation. </t>
      </section>
      <section anchor="key-exchange-payload">
        <name>Key Exchange Payload</name>
        <t>The KE payload is shown below and the fields inside it has meaning as defined in Section 3.4 of the IKEv2 standard <xref target="RFC7296"/>:</t>
		

		
<figure>	
<name>Key Exchange Payload</name>
        <artwork><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Next Payload  |C|  RESERVED   |         Payload Length        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Key Exchange Method Num    |           RESERVED             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                                                               |
~                       Key Exchange Data                       ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
]]>
</artwork> 
</figure>

	<t>The Key Exchange Data from the initiator to the responder contains the public key (pk) from the KeyGen() operation encoded as a raw byte array as defined in <xref target="I-D.F25"/>.</t>
	<t>The Key Exchange Data from the responder to the initiator contains the ciphertext (ct) from the Encaps operation encoded as a raw byte array.</t>
	<t><xref target="ke_payload_table"/> shows the Payload Length, Key Exchange Method Num identifier and the Key Exchange Data Size in octets for Key Exchange Payloads from the initiator and the responder for the NTRU variants specified in this document.</t>
	
<table anchor="ke_payload_table">
  <name>Key Exchange Payload Fields</name>
  <thead>
    <tr>
      <th align='center'>KEM</th>
      <th align='center'>Payload Length (initiator / responder)</th>
      <th align='center'>Key Exchange Method Num</th>
      <th align='center'>Data Size in Octets (initiator / responder)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="center">ntruhps2048677</td>
      <td align="center">938 / 938</td>
      <td align="center">TBD50</td>
      <td align="center">930 / 930</td>
    </tr>
    <tr>
      <td align="center">ntruhrss701</td>
      <td align="center">1146 / 1146</td>
      <td align="center">TBD51</td>
      <td align="center">1138 / 1138 </td>
    </tr>
    <tr>
      <td align="center">ntruhps4096821</td>
      <td align="center">1238 / 1238</td>
      <td align="center">TBD52</td>
      <td align="center">1230 / 1230</td>
    </tr>
	    <tr>
      <td align="center">ntruhps40961229</td>
      <td align="center">1850 / 1850</td>
      <td align="center">TBD53</td>
      <td align="center">1842 / 1842</td>
    </tr>
    <tr>
      <td align="center">ntruhrss1373</td>
      <td align="center">2409 / 2409</td>
      <td align="center">TBD54</td>
      <td align="center">2401 / 2401</td>
    </tr>

  </tbody>
</table>

      </section>
      

    </section>


<section title="Examples of Running Hybrid KEMS with NTRU" anchor="Examples">

<t> Following general exmaples given in Appendix A of <xref target="RFC9370"></xref>, here is an example to show that the initiator proposes the use of additional key exchanges to establish an IKE SA. Here, the initiator proposes three sets of additional key exchanges. Namely, the first set is TBD36 (ml-kem-768), TBD37 (ml-kem-1024) <xref target="I-D.KR24"></xref> or NONE; the second set is TBD50 (ntruhps2048677), TBD52 (ntruhps4096821) or NONE. As both of the two additional key exchanes are optional, the responder can choose NONE for some or all of the additional exchanges if the proposed key exchange methods are not supported or for whatever reasons the responder decides not to perform the additional key exchange.</t>
<figure>	
<name>Hybrid KEMs of ECDH and TBD50 (ntruhps2048677)</name>
<artwork><![CDATA[
Initiator                     Responder
---------------------------------------------------------------------
HDR(IKE_SA_INIT), SAi1(.. ADDKE*...), --->
KEi(Curve25519), Ni, N(IKEV2_FRAG_SUPPORTED),
N(INTERMEDIATE_EXCHANGE_SUPPORTED)
    Proposal #1
    Transform ECR (ID = ENCR_AES_GCM_16,
                    256-bit key)
    Transform PRF (ID = PRF_HMAC_SHA2_512)
    Transform KE (ID = Curve25519)
    Transform ADDKE1 (ID = TBD36)
    Transform ADDKE1 (ID = TBD37)
    Transform ADDKE1 (ID = NONE)
    Transform ADDKE2 (ID = TBD50)
    Transform ADDKE2 (ID = TBD52)
    Transform ADDKE2 (ID = NONE)
    
                   <--- HDR(IKE_SA_INIT), SAr1(.. ADDKE*...),
                        KEr(Curve25519), Nr, N(IKEV2_FRAG_SUPPORTED),
                        N(INTERMEDIATE_EXCHANGE_SUPPORTED)
                        Proposal #1
                          Transform ECR (ID = ENCR_AES_GCM_16,
                                         256-bit key)
                          Transform PRF (ID = PRF_HMAC_SHA2_512)
                          Transform KE (ID = Curve25519)
                          Transform ADDKE1 (ID = NONE)
                          Transform ADDKE2 (ID = TBD50)

HDR(IKE_INTERMEDIATE), SK {KEi(1)(TBD50)} -->
                   <--- HDR(IKE_INTERMEDIATE), SK {KEr(1)(TBD50)}

HDR(IKE_AUTH), SK{ IDi, AUTH, SAi2, TSi, TSr } --->
                      <--- HDR(IKE_AUTH), SK{IDr, AUTH, SAr2,TSi, TSr}                         
]]></artwork> 
</figure>


<t> In the above specific example, the responder chooses to run one additional key exchanges. Namely, it selects NONE and TBD50 (ntruhps2048677), respectively for the first and second additional key exchanges. According to <xref target="RFC7296"></xref>, a set of keying materials can be derived, in particular SK_d, SK_a[i/r], and SK_e[i/r]. After that, both peers will perform an IKE_INTERMEDIATE exchange, carrying TBD50 payload, which is protected with SK_e[i/r] and SK_a[i/r] keys. After the completion of this IKE_INTERMEDIATE exchange, the SKEYSEED is updated using SK(1), which is the TBD50 shared secret. </t>

<t> After the completion of both IKE_INTERMEDIATE exchanges, the initiator and the responder continue to the IKE_AUTH exchange phase. </t>

	</section>
	
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>All security considerations from <xref target="RFC9242"/> and <xref target="RFC9370"/> apply to the NTRU exchanges described in this specification.</t>
      
      <t>The NTRU public key generated by the initiator and the ciphertext generated by the responder use randomness (usually a seed) which <bcp14>MUST</bcp14> be independent of any other random seed used in the IKEv2 negotiation. For example, at the initiator, the NTRU and (EC)DH key pairs should not be generated from the same seed.
	  
	  Also, nonces used in the derivation of SKEYSEED and KEYMAT <bcp14>MUST NOT</bcp14> be reused, in order to ensure the pseudorandomness of key derivation using the pseudorandom function defined in <xref target="RFC9370"/>.
	  </t>
      
	  
	  
    </section>
    
	<section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>IANA is requested to assign five values for the names "ntruhps2048677", "ntruhrss701", "ntruhps40961229", "ntruhrss1373", and "ntruhps4096821"in the IKEv2 "Transform Type 4 - Key Exchange Method Transform IDs" and has listed this document as the reference. The Recipient Tests field should also point to this document:</t>
	  
	  <t> [EDNOTE:  IANA KE code points for FrodoKEM might be assigned, we assume those code points in this spefication.</t>
	  
      <table anchor="tab1">
        <name>Updates to the IANA "Transform Type 4 - Key Exchange Method Transform IDs" table</name>
        <thead>
          <tr>
            <th align="left">Number</th>
            <th align="left">Name</th>
            <th align="left">Status</th>
            <th align="left">Recipient Tests</th>
            <th align="left">Reference</th>
          </tr>
        </thead>
        <tbody> 
          <tr>
            <td align="left">TBD50</td>
            <td align="left">ntruhps2048677</td>
            <td align="left"> </td>
            <td align="left">[TBD, this draft],</td>
            <td align="left">[TBD, this draft] </td>
          </tr>
          <tr>
            <td align="left">TBD51</td>
            <td align="left">ntruhrss701</td>
            <td align="left"> </td>
            <td align="left">[TBD, this draft],</td>
            <td align="left">[TBD, this draft]</td>
          </tr>
          <tr>
            <td align="left">TBD52</td>
            <td align="left">ntruhps4096821</td>
            <td align="left"> </td>
            <td align="left">[TBD, this draft],</td>
            <td align="left">[TBD, this draft]</td>
          </tr>
         <tr>
            <td align="left">TBD53</td>
            <td align="left">ntruhps40961229</td>
            <td align="left"> </td>
            <td align="left">[TBD, this draft],</td>
            <td align="left">[TBD, this draft]</td>
          </tr>
         <tr>
            <td align="left">TBD54</td>
            <td align="left">ntruhrss1373</td>
            <td align="left"> </td>
            <td align="left">[TBD, this draft],</td>
            <td align="left">[TBD, this draft]</td>
          </tr>

		  
          <tr>
            <td align="left">55-1023</td>
            <td align="left">Unassigned</td>
            <td align="left"> </td>
            <td align="left"> </td>
            <td align="left"> </td>
          </tr>
        </tbody>
      </table>
    </section>

  </middle>
  <back>
<references>
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
     

		<reference anchor="RFC9242">
          <front>
            <title>Intermediate Exchange in the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="V. Smyslov" initials="V." surname="Smyslov"/>
            <date month="May" year="2022"/>
            <abstract>
              <t>This document defines a new exchange, called "Intermediate Exchange", for the Internet Key Exchange Protocol Version 2 (IKEv2). This exchange can be used for transferring large amounts of data in the process of IKEv2 Security Association (SA) establishment. An example of the need to do this is using key exchange methods resistant to Quantum Computers (QCs) for IKE SA establishment. The Intermediate Exchange makes it possible to use the existing IKE fragmentation mechanism (which cannot be used in the initial IKEv2 exchange), helping to avoid IP fragmentation of large IKE messages if they need to be sent before IKEv2 SA is established.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9242"/>
          <seriesInfo name="DOI" value="10.17487/RFC9242"/>
        </reference>
        
		<reference anchor="RFC9370">
          <front>
            <title>Multiple Key Exchanges in the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="CJ. Tjhai" initials="CJ." surname="Tjhai"/>
            <author fullname="M. Tomlinson" initials="M." surname="Tomlinson"/>
            <author fullname="G. Bartlett" initials="G." surname="Bartlett"/>
            <author fullname="S. Fluhrer" initials="S." surname="Fluhrer"/>
            <author fullname="D. Van Geest" initials="D." surname="Van Geest"/>
            <author fullname="O. Garcia-Morchon" initials="O." surname="Garcia-Morchon"/>
            <author fullname="V. Smyslov" initials="V." surname="Smyslov"/>
            <date month="May" year="2023"/>
          </front>
          <seriesInfo name="RFC" value="9370"/>
          <seriesInfo name="DOI" value="10.17487/RFC9370"/>
        </reference>
        
		<reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        
		<reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC7296">
          <front>
            <title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="C. Kaufman" initials="C." surname="Kaufman"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <author fullname="Y. Nir" initials="Y." surname="Nir"/>
            <author fullname="P. Eronen" initials="P." surname="Eronen"/>
            <author fullname="T. Kivinen" initials="T." surname="Kivinen"/>
            <date month="October" year="2014"/>
          </front>
          <seriesInfo name="STD" value="79"/>
          <seriesInfo name="RFC" value="7296"/>
          <seriesInfo name="DOI" value="10.17487/RFC7296"/>
        </reference>
      </references>
	  
	  
	  
      <references anchor="sec-informative-references">
        <name>Informative References</name>
   

		<reference anchor="I-D.F25" target="https://datatracker.ietf.org/doc/html/draft-fluhrer-cfrg-ntru-03">
          <front>
            <title> NTRU Key Encapsulation</title>
            <author initials="S." surname="Fluhrer" fullname="Scott Fluhrer">
              <organization>Cisco Systems</organization>
            </author>
            <author initials="M." surname="Prorock" fullname="Michael Prorock">
              <organization>mesur.io</organization>
            </author>
            <author initials="S." surname="Celi" fullname="Sofia Celi">
              <organization>Brave</organization>
            </author>
			<author initials="S." surname="Gray" fullname="John Gray">
              <organization>Entrust</organization>
            </author>
			<author initials="K." surname="Xagawa" fullname="Keita Xagawa">
              <organization>TII</organization>
            </author>
			<author initials="H." surname="Kosuge" fullname="Haruhisa Kosuge">
              <organization>NTT</organization>
            </author>
            <date month="March" day="3" year="2025"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-fluhrer-cfrg-ntru-03"/>
        </reference>
        

		<reference anchor="I-D.D25" target="https://datatracker.ietf.org/doc/html/draft-ietf-pquip-pqt-hybrid-terminology-06">
          <front>
            <title>Terminology for Post-Quantum Traditional Hybrid Schemes</title>
            <author initials="F." surname="D" fullname="Florence D">
              <organization>UK National Cyber Security Centre</organization>
            </author>
            <author initials="M." surname="P" fullname="Michael P">
              <organization>UK National Cyber Security Centre</organization>
            </author>
            <author initials="B." surname="Hale" fullname="Britta Hale">
              <organization>Naval Postgraduate School</organization>
            </author>
            <date month="January " day="10" year="2025"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-pquip-pqt-hybrid-terminology-06"/>
        </reference>
		
		<reference anchor="I-D.KR24"  target="https://datatracker.ietf.org/doc/draft-kampanakis-ml-kem-ikev2/">
          <front>
            <title>Post-quantum Hybrid Key Exchange with ML-KEM in the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="P. Kampanakis" initials="K." surname="Kampanakis"/>
            <author fullname="G. Ravago" initials="G." surname="Ravago"/>
            <date month="February" year="2024"/>
            <abstract>
              <t> .. </t>
            </abstract>
          </front>
          <seriesInfo name="Work in Progress, " value="Internet-Draft, "/>
        </reference>
		
		
        <reference anchor="NIST-PQ">
          <front>
            <title>Post-Quantum Cryptography</title>
            <author>
              <organization>National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date/>
          </front>
          <seriesInfo name="https://csrc.nist.gov/projects/post-quantum-cryptography" value=""/>
        </reference>
        <reference anchor="RFC8784">
          <front>
            <title>Mixing Preshared Keys in the Internet Key Exchange Protocol Version 2 (IKEv2) for Post-quantum Security</title>
            <author fullname="S. Fluhrer" initials="S." surname="Fluhrer"/>
            <author fullname="P. Kampanakis" initials="P." surname="Kampanakis"/>
            <author fullname="D. McGrew" initials="D." surname="McGrew"/>
            <author fullname="V. Smyslov" initials="V." surname="Smyslov"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>The possibility of quantum computers poses a serious challenge to cryptographic algorithms deployed widely today. The Internet Key Exchange Protocol Version 2 (IKEv2) is one example of a cryptosystem that could be broken; someone storing VPN communications today could decrypt them at a later time when a quantum computer is available. It is anticipated that IKEv2 will be extended to support quantum-secure key exchange algorithms; however, that is not likely to happen in the near term. To address this problem before then, this document describes an extension of IKEv2 to allow it to be resistant to a quantum computer by using preshared keys.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8784"/>
          <seriesInfo name="DOI" value="10.17487/RFC8784"/>
        </reference>
      
		<reference anchor="RFC7383">
          <front>
            <title>Internet Key Exchange Protocol Version 2 (IKEv2) Message Fragmentation</title>
            <author fullname="V. Smyslov" initials="V." surname="Smyslov"/>
            <date month="November" year="2014"/>
            <abstract>
              <t>This document describes a way to avoid IP fragmentation of large Internet Key Exchange Protocol version 2 (IKEv2) messages. This allows IKEv2 messages to traverse network devices that do not allow IP fragments to pass through.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7383"/>
          <seriesInfo name="DOI" value="10.17487/RFC7383"/>
        </reference>
       
		<reference anchor="I-D.W25"  target="https://datatracker.ietf.org/doc/draft-wang-hybrid-kem-ikev2-frodo-02/">
          <front>
            <title>Post-quantum Hybrid Key Exchange in the IKEv2 with FrodoKEM</title>
            <author fullname="Guilin Wang" initials="G." surname="Wang"/>
            <date month="April" year="2025"/>
            <abstract>
              <t>  RFC 9370 specifies a framework that supports mulitple key encapsulation mechanisms (KEMs) in the Internet Key Exchange Protocol Version 2 (IKEv2) by allowing up to 7 layers of additiona KEMs employed with the oringal ECDH to derive the final shared secret keys for IPsec protocols. The primitive goal is to mitigate the security threat against quantum computers by hybriding additional post-quantum (PQ) KEMs with the orinigal ECDH key exchange. This draft describes concretely how two specific QP KEMs, namely, ML-KEM and FrodoKEM, can be instantiated in the IKEv2 as the additional KEMs with the main ECDH to achieve hybrid key agreement.  </t>
            </abstract>
          </front>
          <seriesInfo name="Work in Progress, " value="Internet-Draft, "/>
        </reference>
		
			<reference anchor="FIPS203"  target="https://csrc.nist.gov/pubs/fips/203/ipd">
          <front>
            <title>FIPS 203(Initial Draft): Module-Lattice-Based Key-Encapsulation Mechanism Standard </title>
            <author fullname="National Institute of Standards and Technology" initials="" surname="National Institute of Standards and Technology" />
            <date month="August" year="2023"/>
            <abstract>
              <t> .. </t>
            </abstract>
          </front>
          <seriesInfo name="FIPS Standard (Draft)" value=""/>
        </reference>
	   
				<reference anchor="NTRU"  target="https://info.isl.ntt.co.jp/crypt/ntru/files/ntru.pdf">
          <front>
            <title>NTRU Algorithm Specifications And Supporting Documentation</title>
            <author fullname="Cong Chen" initials="C." surname="Chen"/>
            <author fullname="Oussama Danba" initials="O." surname="Bos"/>
			<author fullname="Jeffrey Hoffstein" initials="J." surname="Ducas"/>
			<author fullname="Andreas Hülsing" initials="A." surname="Longa"/>
            <author fullname="Joost Rijneveld" initials="J. " surname="Mironov"/>
			<author fullname="John M. Schanck" initials="J." surname="Naehrig"/>
			<author fullname="Tsunekazu Saito" initials="T." surname="Nikolaenko"/>
			<author fullname="Peter Schwabe" initials="P." surname="Peikert"/>
			<author fullname="William Whyte" initials="W." surname="Raghunathan"/>
            <author fullname="Keita Xagawa" initials="K. " surname="Stebila"/>
            <author fullname="Takashi Yamakawa" initials="T. " surname="Stebila"/>
            <author fullname="Zhenfei Zhang" initials="Z. " surname="Stebila"/>
            <date month="September" year="2020"/>
            <abstract>
              <t> .. </t>
            </abstract>
          </front>
          <seriesInfo name="Preliminary Standardization Proposal submitted to ISO" value=""/>
        </reference>

		
	  </references>
    </references>



<section numbered="false" anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>To be added later.</t>
    </section>
  
  </back>
  
</rfc>
